#!/bin/bash

set -e

dotfiles=$(grealpath $(dirname $(grealpath $0))/../..)

source $dotfiles/_helpers.zsh

function stowpackage {
  local action=$1
  local dir=$(dirname $2)
  local pkg=$(basename $2)

  stow \
    --dir=$dir \
    --target=$HOME \
    --ignore=support \
    --ignore=.gitignore \
    --ignore=Brewfile \
    --ignore=Brewfile.lock.json \
    --ignore=install \
    $action \
    "$pkg"
}

command=$1
[ "$#" == "0" ] || shift

case $command in

home)
  echo $dotfiles
  ;;

install)
  cd $dotfiles
  for package in "$@"; do
    green "installing $package"
    [ -f ./$package/Brewfile ] && brew bundle --file=./$package/Brewfile
    stowpackage --restow $package
    [ -x ./$package/install ] && ./$package/install
    echo $package >> ~/.local/dotfiles
    sort --unique ~/.local/dotfiles > ~/.local/dotfiles.new
    mv ~/.local/dotfiles.new ~/.local/dotfiles
  done
  green "installed packages $*"
  ;;

uninstall)
  cd $dotfiles
  for package in "$@"; do
    green "uninstalling $package"
    stowpackage --delete $package
    sed "/^${package//\//\\/}$/d" ~/.local/dotfiles > ~/.local/dotfiles.new
    mv ~/.local/dotfiles.new ~/.local/dotfiles
  done
  green "uninstalled packages $*"
  yellow "be aware that none of the Brewfile dependencies or custom install steps have been uninstalled or reverted"
  ;;

list)
  cd $dotfiles
  cat ~/.local/dotfiles
  ;;

reinstall)
  packages=$(perl -pe 's/\n/ / unless eof' ~/.local/dotfiles)
  $0 install $packages
  ;;

resymlink)
  cd $dotfiles
  packages=$(perl -pe 's/\n/ / unless eof' ~/.local/dotfiles)
  for package in $packages; do
    green "symlinking $package"
    stowpackage --restow $package
  done
  green "symlinked packages $packages"
  ;;

adopt)
  red "this will adopt changes made outside of this directory (eg by overwriting the stowed symlinks) by overwriting the local files - please make sure you don't have any local changes"
  confirm
  cd $dotfiles
  for package in "$@"; do
    green "adopting $package"
    stowpackage --adopt $package
  done
  green "adopted changes from packages $*"
  yellow "please check if there are any changes that should be commited to version control"
  ;;

add)
  package=$1
  [ -z "$package" ] && $(echo "you need to specify a package to add the file to" 1>&2) && exit 1
  file=$2
  [ -z "$file" ] && $(echo "you need to specify a file to add to the package" 1>&2) && exit 1

  dir=$(dirname "$file")
  mkdir -p "$dotfiles/$package/$dir"

  mv "$2" "$dotfiles/$package/$file" # this might leave an empty directory behind that affects symlinking by stow

  $0 install $package
  ;;

*)
  echo "Usage: $0 command [parameter(s)]

Available commands:

    home                   displays the home of this dotfiles install

    install [package(s)]   installs given package(s)
                           1. install dependencies via Brewfile
                           2. symlink all of the package's files
                           3. run a custom install script if present

    uninstall [package(s)] uninstalls given package(s)
                           This doesn't remove dependencies installed via
                           Brewfile or changes done by the install script!

    list                   lists all installed packages

    reinstall              reinstalls all installed packages (see list command)

    resymlink              symlink all installed package's files

    add [package] [file]   adds a file to a package
                           This converts a real file to a symlinked file.

    adopt [package(s)]     adopt changes made to the given package(s) outside
                           of the dotfiles directory, eg after someone replaced
                           the symlink with a new file"
  exit 1

esac
