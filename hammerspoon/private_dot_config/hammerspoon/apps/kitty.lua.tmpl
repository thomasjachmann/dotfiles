{{ $homebrewPrefix := or (trimSuffix "/bin/brew" (findExecutable "brew" (list "/opt/homebrew/bin" "/usr/local/bin"))) "---no-homebrew---" -}}
local kitty = {}

local apps = require "lib.apps"

kitty.cmd = "{{ $homebrewPrefix }}/bin/kitty @ --to=unix:/tmp/kitty.sock"

function kitty.remote(args)
  return os.execute(kitty.cmd .. " " .. args)
end

function kitty.launch(options)
  options = options or {}

  args = "launch --type=os-window"
  if options.title then args = args .. " --title='" .. options.title .. "'" end
  if options.shell or options.cmd then
    zdotdir = options.zdotdir or "${HOME}/.config/zsh"
    args = args .. " --env \"ZDOTDIR=" .. zdotdir .. "\" -- {{ $homebrewPrefix }}/bin/zsh"
  end
  if options.cmd then args = args .. " -c \"" .. options.cmd .. "\"" end

  return kitty.remote(args)
end

function kitty.focusOrLaunch(options)
  if not options then options = {} end

  return apps.launchOrNewWindow("net.kovidgoyal.kitty", {
    raiseWindow = true,
    newWindowFn = function()
      if options.title then matcher = "--match 'title:^" .. options.title .. "$'" end
      existing = options.title and kitty.remote("focus-window " .. matcher)
      if not existing then
        kitty.launch(options)
        if options.newWindowFn then options.newWindowFn() end
        if options.text then kitty.remote("send-text " .. matcher .. " \"" .. options.text .. "\"") end
      end
    end
  })
end

return kitty
