# setup shell and terminal configuration
set -g default-shell "/usr/local/bin/zsh"
set -g default-command "/usr/local/bin/reattach-to-user-namespace -l /usr/local/bin/zsh"
set -g default-terminal "screen-256color"

if-shell '[[ "$(/usr/local/bin/tmux -V)" == "tmux 3.2a" ]]' 'source-file $HOME/.config/tmux/3.2a.conf'
if-shell '[[ "$(/usr/local/bin/tmux -V)" == "tmux 3.2" ]]' 'source-file $HOME/.config/tmux/3.2.conf'
if-shell '[[ "$(/usr/local/bin/tmux -V)" == "tmux 3.1c" ]]' 'source-file $HOME/.config/tmux/3.1c.conf'
if-shell '[[ "$(/usr/local/bin/tmux -V)" == "tmux 3.1b" ]]' 'source-file $HOME/.config/tmux/3.1b.conf'
if-shell '[[ "$(/usr/local/bin/tmux -V)" == "tmux 3.1a" ]]' 'source-file $HOME/.config/tmux/3.1a.conf'
if-shell '[[ "$(/usr/local/bin/tmux -V)" == "tmux 3.1" ]]' 'source-file $HOME/.config/tmux/3.1.conf'
if-shell '[[ "$(/usr/local/bin/tmux -V)" == "tmux 3.0a" ]]' 'source-file $HOME/.config/tmux/3.0a.conf'
if-shell '[[ "$(/usr/local/bin/tmux -V)" == "tmux 2.9a" ]]' 'source-file $HOME/.config/tmux/2.9a.conf'
if-shell '[[ "$(/usr/local/bin/tmux -V)" == "tmux 2.8" ]]' 'source-file $HOME/.config/tmux/2.8.conf'
if-shell '[[ "$(/usr/local/bin/tmux -V)" == "tmux 2.7" ]]' 'source-file $HOME/.config/tmux/2.7.conf'
if-shell '[[ "$(/usr/local/bin/tmux -V)" == "tmux 2.6" ]]' 'source-file $HOME/.config/tmux/2.6.conf'
if-shell '[[ "$(/usr/local/bin/tmux -V)" == "tmux 2.5" ]]' 'source-file $HOME/.config/tmux/2.5.conf'
if-shell '[[ "$(/usr/local/bin/tmux -V)" == "tmux 2.4" ]]' 'source-file $HOME/.config/tmux/2.4.conf'
if-shell '[[ "$(/usr/local/bin/tmux -V)" == "tmux 2.3" ]]' 'source-file $HOME/.config/tmux/2.3.conf'
if-shell '[[ "$(/usr/local/bin/tmux -V)" == "tmux 2.2" ]]' 'source-file $HOME/.config/tmux/2.2.conf'
if-shell '[[ "$(/usr/local/bin/tmux -V)" == "tmux 2.1" ]]' 'source-file $HOME/.config/tmux/2.1.conf'
if-shell '[[ "$(/usr/local/bin/tmux -V)" == "tmux 2.0" ]]' 'source-file $HOME/.config/tmux/2.0.conf'

# general settings
set -sg escape-time 10        # allow vim to receive ESC key presses quicker
set -g base-index 1           # use 1 based window index
set -wg pane-base-index 1     # use 1 based pane index
set -g renumber-windows on    # renumber windows when one is closed to make new windows go to the end
set -g history-limit 99999    # increase scrollback buffer to avoid losing data on long command outputs

# key configuration
set -g status-keys vi
set -wg mode-keys vi

# general color/style settings
set -g status-style "bg=#707070 fg=#e0e0e0"
set -wg window-status-style "bg=#005f00 fg=#afd700"
set -wg window-status-current-style "bg=#afd700 fg=#005f00 bold"
set -g window-status-separator ""
set -g pane-border-style "bg=#a0a0a0 fg=#a0a0a0"
set -g pane-active-border-style "bg=#005f00 fg=#005f00"

# status bar content
# those two are guessed from kalisi's V-LINE mode!!
set -g status-left-style "bg=#0071c0 fg=#7ad6ff"
set -g status-left " $#S "
set -wg window-status-format " @#I(#{window_panes}):#W#F "
set -wg window-status-current-format " @#I(#{window_panes}):#W#F "
# those two are guessed from kalisi's INSERT mode!!
set -g status-right-style "bg=#872222 fg=#d75f5f"
set -g status-right "#{?client_prefix,#[reverse] <C-b> #[noreverse],}#{?pane_synchronized, synchronized ,}"

# force quick update of status bar to update synchronized state (above) when eg
# switching windows
set -g status-interval 1

# general key bindings
bind r source $HOME/.config/tmux/tmux.conf \; refresh-client -S \; display-message 'config reloaded'

bind Y pipe-pane -o ~/bin/tmux-pipe-to-pbcopy

bind i setw synchronize-panes \; refresh-client -S

# to prevent accidental backgrounding by having C still pressed when zooming with the default binding <prefix> z
bind C-z resize-pane -Z

# window creation
bind C new-window -c '#{pane_current_path}'

# window navigation
bind C-p previous-window
bind C-n next-window

# window swapping
bind Left swap-window -t -1
bind Right swap-window -t +1

# window renaming
bind \; run-shell '/usr/local/bin/tmux rename-window "$(basename #{pane_current_path})"'

# pane creation
bind s split-window -v -c '#{pane_current_path}'
bind C-s split-window -v -c '#{pane_current_path}'
bind v split-window -h -c '#{pane_current_path}'
bind C-v split-window -h -c '#{pane_current_path}'

bind S split-window -b -v -c '#{pane_current_path}'
bind V split-window -b -h -c '#{pane_current_path}'

# pane navigation
unbind Up
unbind Down
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# pane resizing
bind H resize-pane -L "10"
bind J resize-pane -D "10"
bind K resize-pane -U "10"
bind L resize-pane -R "10"

# pane moving
bind C-s display-panes\; command-prompt -p "pane to move current pane after (horizontal split):" "move-pane -v -t %%"
bind C-v display-panes\; command-prompt -p "pane to move current pane after (vertical split):" "move-pane -h -t %%"

# clear pane for non readline (tail, rails server, etc)
bind -n C-l send-keys -R \; send-keys C-l \; clear-history

# d: development window mode (big on the right, three small ones on the left)
# this assumes we've only got one pane before, we have to always go back to
# pane 1 in order to being able to use pane_current_path since the newly
# created panes don't have a path yet when we split the next one
bind d \
  split-window -b   -h -p 25 -c '#{pane_current_path}'\; select-pane -t 2\;\
  split-window -t 1 -v -p 35 -c '#{pane_current_path}'\; select-pane -t 3\;\
  split-window -t 2 -v -p 60 -c '#{pane_current_path}'\; select-pane -t 4

# since this file is in version control and used on multiple computers, allow
# to customize tmux for a local machine by creating .config/tmux/local.conf
if-shell '[[ -f $HOME/.config/tmux/local.conf ]]' 'source-file $HOME/.config/tmux/local.conf'
